{"version":3,"file":"static/js/79.a9adc8a5.chunk.js","mappings":"2RAEaA,EAAMC,EAAAA,GAAAA,IAAH,gQAWHC,EAAKD,EAAAA,GAAAA,GAAH,6JAQFE,EAAKF,EAAAA,GAAAA,GAAH,yIASFG,EAAQH,EAAAA,GAAAA,EAAH,0LAULI,GAAWJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,yDAIRM,EAASN,EAAAA,GAAAA,IAAH,wGAMNO,EAAYP,EAAAA,GAAAA,GAAH,0H,mBC5CP,SAASQ,IACxB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KAmBG,OAlBHC,EAAAA,EAAAA,YAAU,WAAK,wCACX,2FACID,GAAU,GADd,mBAGyBE,EAAAA,EAAAA,MAHzB,OAGYC,EAHZ,OAIML,EAAUK,GAJhB,yEAUMH,GAAU,GAVhB,6EADW,uBAAC,WAAD,wBAcXI,KAED,KAGE,iCACA,SAACV,EAAD,qLACAK,IAAU,SAACN,EAAD,WACT,SAAC,KAAD,CAAcY,UAAU,oBAAoBC,MAAM,MAAMC,eAAe,MAAMC,OAAQ,IAAKC,MAAO,SAElG,SAACrB,EAAD,UACES,EAAOa,KAAI,SAAAC,GAAG,OAChB,SAACtB,EAAD,WACE,UAACE,EAAD,CAAUqB,GAAE,kBAAaD,EAAIE,IAA7B,WACE,SAACvB,EAAD,UAAQqB,EAAIG,SACb,SAAC5B,EAAD,CAAK6B,IAAG,8CAAyCJ,EAAIK,aAAeC,IAAI,SAHlEN,EAAIE,c,kOClCZK,EAAW,+BACXC,EAAM,mCAEL,SAAejB,IAAtB,4CAAO,OAAP,oBAAO,oGACoBkB,IAAAA,IAAA,UAAaF,EAAb,wCAAqDC,EAArD,iBADpB,cACGE,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BX,GAA7B,uFACgBO,IAAAA,IAAA,UAAaF,EAAb,kBAA+BL,EAA/B,oBAA6CM,EAA7C,iBADhB,cACDE,EADC,OAEPI,QAAQC,IAAIL,EAASC,MAFd,kBAGAD,EAASC,MAHT,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4Bd,GAA5B,uFACoBO,IAAAA,IAAA,UAAaF,EAAb,kBAA+BL,EAA/B,4BAAqDM,IADzE,cACGE,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4Bf,GAA5B,uFACoBO,IAAAA,IAAA,UAAaF,EAAb,kBAA+BL,EAA/B,4BAAqDM,IADzE,cACGE,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeO,EAAtB,iDAAO,OAAP,oBAAO,WAA2BC,EAAOC,GAAlC,uFACoBX,IAAAA,IAAA,UAAaF,EAAb,iCAA8CC,EAA9C,kBAA2DW,EAA3D,iBAAyEC,EAAzE,iBADpB,cACGV,EADH,yBAGIA,EAASC,MAHb,kEAMA,SAAeU,EAAtB,iDAAO,OAAP,oBAAO,WAA2BnB,EAAIoB,GAA/B,uFACoBb,IAAAA,IAAA,UAAaF,EAAb,kBAA+BL,EAA/B,2BAAoDM,EAApD,qBAAoEc,IADxF,cACGZ,EADH,OAEHI,QAAQC,IAAIL,EAASC,MAFlB,kBAGID,EAASC,KAAKC,SAHlB","sources":["components/HomePage/HomePage.styled.jsx","components/HomePage/HomePage.js","services/films-api.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nexport const Img = styled.img`\n    width: 274px;\n    height: 398px;\n    border-radius: 5px;\n    &:hover{\n        box-shadow: 2px -2px 2px 3px white;\n        transform: translateX(1px) rotate(1deg) translateY(1px);\n        transition: all 400ms;\n    }\n    `\n\nexport const Ul = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    padding: 0px 0px 50px 0px;\n    margin: 0;\n    \n`\nexport const Li = styled.li`\n    list-style: none;\n    width: 274px;\n    text-align: center;\n    &:hover{\n        color: black;\n    }\n\n`\nexport const Title = styled.p`\n    font-size: 18px;\n    height: 36px;\n    margin-top: 8px;\n    color: #ffffff;\n    &:hover{\n        color: #ffae00;\n        transition: all 400ms;\n    }\n`\nexport const LinkCard = styled(Link)`\n    text-decoration: none;\n   \n`\nexport const Loader = styled.div`\n    display: flex;\n    justify-content: center;\n    margin-top: 150px;\n    \n`\nexport const TitleHome = styled.h1`\n    color: #ffae00;\n    font-size: 30px;\n    margin: 10px 0px 0px 0px;\n    text-align:center;\n`","import { useState, useEffect } from \"react\";\nimport {fetchMovies} from 'services/films-api'\nimport { Img, Ul, Li,Title,LinkCard,Loader,TitleHome } from \"./HomePage.styled\";\nimport { MutatingDots } from  'react-loader-spinner'\n\n\nexport default function HomePage(){\nconst [movies, setMovies] = useState([]);\nconst [isLoad, setIsLoad] = useState(false);     \nuseEffect(()=> {\n    async function fetchFilms(){\n        setIsLoad(true)\n        try {\n          const item = await fetchMovies()\n          setMovies(item)\n          \n        } catch (error) {\n            \n        }\n        finally{\n          setIsLoad(false)\n        }\n    }\n    fetchFilms()\n   \n}, []);\n\n   return(\n     <>\n     <TitleHome>Самые популярные фильмы недели:</TitleHome>\n    {isLoad && <Loader>\n      <MutatingDots ariaLabel=\"loading-indicator\" color=\"red\" secondaryColor=\"red\" height={150} width={100} />\n               </Loader>}\n     <Ul>\n     { movies.map(mov => (\n     <Li key={mov.id}>\n       <LinkCard to={`/movies/${mov.id}`}>\n         <Title>{mov.title}</Title>\n        <Img src={`https://www.themoviedb.org/t/p/w500/${mov.poster_path}`} alt=\"\" />\n       </LinkCard>\n       </Li>))}\n     </Ul>\n     \n     </>\n   )\n}","import axios from \"axios\";\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '7ff46056cd22f85530306cb26beea478';\n\nexport async function fetchMovies(){\n    const response = await axios.get(`${BASE_URL}/trending/movie/week?api_key=${KEY}&language=ru`)\n    return response.data.results\n    \n}\n\nexport async function fetchMoviesId(id){\nconst response = await axios.get(`${BASE_URL}/movie/${id}?api_key=${KEY}&language=ru`)\nconsole.log(response.data)\nreturn response.data\n}\n\nexport async function fetchCredits(id){\n    const response = await axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${KEY}`)\n    return response.data\n}\n\nexport async function fetchReviews(id){\n    const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${KEY}` )\n    return response.data\n}\n\nexport async function searchFilms(query, page){\n    const response = await axios.get(`${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&page=${page}&language=ru`)\n    \n    return response.data\n}\n\nexport async function fetchVideos(id, lang){\n    const response = await axios.get(`${BASE_URL}/movie/${id}/videos?api_key=${KEY}&language=${lang}`)\n    console.log(response.data)\n    return response.data.results\n    }"],"names":["Img","styled","Ul","Li","Title","LinkCard","Link","Loader","TitleHome","HomePage","useState","movies","setMovies","isLoad","setIsLoad","useEffect","fetchMovies","item","fetchFilms","ariaLabel","color","secondaryColor","height","width","map","mov","to","id","title","src","poster_path","alt","BASE_URL","KEY","axios","response","data","results","fetchMoviesId","console","log","fetchCredits","fetchReviews","searchFilms","query","page","fetchVideos","lang"],"sourceRoot":""}