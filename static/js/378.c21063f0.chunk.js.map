{"version":3,"file":"static/js/378.c21063f0.chunk.js","mappings":"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","sources":["components/Movies/Movies.styled.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.js","components/Trailers/Trailers.styled.jsx","components/Trailers/Trailers.js","components/Movies/Movies.js","services/films-api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Link = styled(NavLink)`\n  margin-right: 20px;\n  color: white;\n  font-size:22px;\n  &.active {\n    color: red;\n  }\n`;\nexport const LinkBack = styled(NavLink)`\n  display: flex;\n  align-items:center;\n  color: white;\n  font-size:18px;\n  margin-top: 5px;\n  text-decoration: none;\n  &:hover {\n    color: #ffae00;\n    transition: color 300ms;\n  }\n`;\nexport const Wrapper = styled.ul`\ndisplay: flex;\n`;\nexport const Li = styled.li`\n    list-style: none;\n    margin-right: 15px;\n`\nexport const Container = styled.div`\n  display:flex;\n  margin-top: 20px;\n`\nexport const Title = styled.h1`\n  font-size: 24px;\n  \n  color: white;\n`\nexport const TitleInfo = styled.h2`\n  font-size: 22px;\n  color: #ffae00;\n  margin: 0;\n`\nexport const Img = styled.img`\n  width: 234px;\n    height: 338px;\n    border-radius: 5px;\n   \n`\nexport const P = styled.p`\n  color: white;\n`\nexport const PRed = styled.p`\n  color: #ffae00;\n  font-size: 16px;\n`\nexport const GanrLi = styled.li`\n  color: white;\n`\nexport const Span = styled.span`\n  color:white;\n`\nexport const DivRight = styled.div`\nposition: relative;\n  margin-right: 30px;\n`\nexport const DivYouTube = styled.div`\n  position: absolute;\n  top: 125px;\n  left: 79px;\n  &:hover{\n    transform: scale(1.05)\n  }\n`\n\n\n","import styled from \"styled-components\";\nexport const Ul = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    padding: 0;\n    margin: 0;\n`\nexport const Img = styled.img`\n    width: 90%;\n    height: 70%;\n    border-radius: 5px;`\nexport const Li = styled.li`\nheight: 270px;\nwidth: 150px;\ntext-align: center;\nmargin-bottom: 40px;\nlist-style: none;\n`\nexport const Title = styled.p`\n    color: white;\n    font-size: 14px;\n`\nexport const TitleOrange = styled.p`\n    color: #ffae00;\n    font-size: 14px;\n`\n\nexport const Span = styled.span`\n    color: white;\n`\n    \n","import { fetchCredits } from \"services/films-api\"\nimport { useParams } from \"react-router-dom\";\nimport { useState,useEffect } from \"react\";\nimport { Ul, Li, Img,Title, Span,TitleOrange } from \"./Cast.styled\";\n\nexport default function Cast (){\n    const [actors, setActors] = useState([])\n    const {movId} = useParams();\n\n    useEffect(()=>{\n        async function getFilmActors(){\n            const item = await fetchCredits(movId)\n            console.log([item.cast])\n            setActors(item.cast)\n            \n        }\n        getFilmActors()\n    }, [movId])\n\n\n    return(\n        <Ul>\n    {actors.map(({character, id, name, profile_path}) =>(\n        <Li key={id}>\n            <Img src={`https://www.themoviedb.org/t/p/w500/${profile_path}`} alt=\"\" />\n            <Title>{name}</Title>\n            <TitleOrange>Персонаж: <Span>{character}</Span></TitleOrange>\n        </Li>\n    ) )}\n\n        </Ul>\n    )\n}","import styled from \"styled-components\";\nexport const TitleOr = styled.p`\n    color: #ffae00;\n    font-size: 18px;\n    font-style: oblique;\n`\nexport const Content = styled.p`\n    color: white;\n    font-size: 14px;\n`","import { fetchReviews } from \"services/films-api\"\nimport { useParams } from \"react-router-dom\";\nimport { useState,useEffect } from \"react\";\nimport { TitleOr, Content } from \"./Reviews.styled\";\n\nexport default function Reviews (){\n    const [revInfo, setRevInfo] = useState([])\n    const {movId} = useParams();\n    console.log(useParams())\n\n    useEffect(()=>{\n        async function getFilmReviews(){\n            const item = await fetchReviews(movId)\n            console.log([item.results])\n            setRevInfo(item.results)\n            \n        }\n        getFilmReviews()\n    }, [movId])\n\n\n    return(\n        <>\n        <ul>\n    {revInfo.map(({id, author, content}) => (\n        <li key={id}>\n            <TitleOr>Автор: {author}</TitleOr>\n            <Content>{content}</Content>\n        </li>\n    ))}\n        </ul>\n        </>\n    )\n}","import styled from 'styled-components';\n\nexport const Container = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n   \n`\nexport const LiTrailers = styled.li`\n    margin-right: 15px;\n    margin-bottom: 15px;\n    padding-top: 15px;\n    list-style: none;\n    border: 5px solid #ffae00;\n`","import { useParams} from \"react-router-dom\";\nimport { fetchVideos } from \"services/films-api\";\nimport { useState, useEffect } from \"react\";\nimport ReactPlayer from 'react-player/youtube'\nimport { Container,LiTrailers} from \"./Trailers.styled\";\n\n\nexport default function Trailers(){\n    const [trailer, setTrailer] = useState([]);\n    const {movId} = useParams();\n    const lang = 'ru'\n    \n    useEffect(()=>{\n        async function getFilmById(){\n            const item = await fetchVideos(movId, lang)\n            setTrailer(item)\n            \n        }\n        getFilmById()\n    }, [movId])\n  \n    \n\n    return(\n       \n   \n<Container >\n {(trailer.length > 0)?( trailer.map(({id, key}) => (\n     <LiTrailers key={id}>\n    <ReactPlayer  playing={false} controls={true} url={`https://www.youtube.com/watch?v=${key}`} />\n    </LiTrailers>\n ))) : <h2 style={{color: 'red', margin: 0}}>Пока нет трейлеров...</h2>}\n \n</Container>\n\n    )\n}\n","import { useParams, Route, Routes, useLocation } from \"react-router-dom\";\nimport { fetchMoviesId } from \"services/films-api\";\nimport { useState, useEffect } from \"react\";\nimport { Link, Wrapper, Li, Container,Title,Img, GanrLi,PRed,Span,DivRight,LinkBack, TitleInfo, DivYouTube} from \"./Movies.styled\";\nimport Cast from \"components/Cast\";\nimport Reviews from \"components/Reviews\";\nimport Trailers from \"components/Trailers\";\nimport {ImYoutube} from \"react-icons/im\";\nimport { GoArrowLeft } from \"react-icons/go\";\n\n\nexport default function Movies(){\n    const location = useLocation()\n\n    const [film, setFilm] = useState([]);\n    const {movId} = useParams();\n    useEffect(()=>{\n        async function getFilmById(){\n            const item = await fetchMoviesId(movId)\n            console.log([item])\n            setFilm([item])\n            \n        }\n        getFilmById()\n    }, [movId])\n  \n    return(\n<div>\n    <LinkBack to={location?.state?.from ?? '/home'}><GoArrowLeft size={24}/> Обратно к списку</LinkBack>\n    {film.map(({id, title, poster_path,overview,genres, vote_average, release_date }) => (\n    \n    <div key={id}>\n        <div>\n            <Container>\n        <DivRight>\n        <Link to='trailer'>\n            <DivYouTube>\n                <ImYoutube size={80} color={'red'} />\n            </DivYouTube>\n        <Img src={`https://www.themoviedb.org/t/p/w500/${poster_path}`} alt=\"\"/>     \n        </Link>\n        \n        </DivRight>\n       <div>\n           <Title>{title} ({parseInt(release_date)})</Title>\n           <PRed>Оценка: <Span>{vote_average}</Span></PRed>\n           <PRed>Описание: <Span>{overview}</Span> </PRed>\n           <PRed>Жанры:</PRed>\n           <ul>\n               {genres.map(gnr => <GanrLi key={gnr.id}>{gnr.name}</GanrLi>)}\n           </ul>\n       </div>\n       \n       </Container>\n       </div>\n       <hr/>\n           <TitleInfo>Дополнительная информация</TitleInfo>\n           <Wrapper>\n            <Li><Link to='cast' state={{from: location?.state?.from ?? '/'}}>Актеры </Link></Li>\n            <Li><Link to='reviews' state={{from: location?.state?.from ?? '/'}}>Отзывы</Link></Li>\n         </Wrapper>\n       \n       <div>\n       <Routes>\n         <Route path=\"cast\" element={<Cast/>}/>\n         <Route path=\"reviews\" element={<Reviews/>}/>\n         <Route path=\"trailer\" element={<Trailers/>}/>\n       </Routes>\n       </div>\n        </div>\n        \n        \n        ))}\n       \n</div>\n\n    )\n}","import axios from \"axios\";\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '7ff46056cd22f85530306cb26beea478';\n\nexport async function fetchMovies(){\n    const response = await axios.get(`${BASE_URL}/trending/movie/week?api_key=${KEY}&language=ru`)\n    return response.data.results\n    \n}\n\nexport async function fetchMoviesId(id){\nconst response = await axios.get(`${BASE_URL}/movie/${id}?api_key=${KEY}&language=ru`)\nconsole.log(response.data)\nreturn response.data\n}\n\nexport async function fetchCredits(id){\n    const response = await axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${KEY}`)\n    return response.data\n}\n\nexport async function fetchReviews(id){\n    const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${KEY}` )\n    return response.data\n}\n\nexport async function searchFilms(query, page){\n    const response = await axios.get(`${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&page=${page}&language=ru`)\n    \n    return response.data\n}\n\nexport async function fetchVideos(id, lang){\n    const response = await axios.get(`${BASE_URL}/movie/${id}/videos?api_key=${KEY}&language=${lang}`)\n    console.log(response.data)\n    return response.data.results\n    }"],"names":["Link","styled","NavLink","LinkBack","Wrapper","Li","Container","Title","TitleInfo","Img","PRed","GanrLi","Span","DivRight","DivYouTube","Ul","TitleOrange","Cast","useState","actors","setActors","movId","useParams","useEffect","fetchCredits","item","console","log","cast","getFilmActors","map","character","id","name","profile_path","src","alt","TitleOr","Content","Reviews","revInfo","setRevInfo","fetchReviews","results","getFilmReviews","author","content","LiTrailers","Trailers","trailer","setTrailer","fetchVideos","getFilmById","length","key","playing","controls","url","style","color","margin","Movies","location","useLocation","film","setFilm","fetchMoviesId","to","state","from","size","title","poster_path","overview","genres","vote_average","release_date","parseInt","gnr","path","element","BASE_URL","KEY","fetchMovies","axios","response","data","searchFilms","query","page","lang"],"sourceRoot":""}